[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "united-system"
version = "1.0.0"
description = "A comprehensive Python library for handling physical units, dimensions, and united data structures with support for dataframes, arrays, and scalars."
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "Benedikt Axel Brandes", email = "benedikt.brandes@me.com"}
]
maintainers = [
    {name = "Benedikt Axel Brandes", email = "benedikt.brandes@me.com"}
]
keywords = ["units", "dimensions", "physics", "dataframe", "arrays", "scalars", "hdf5", "serialization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
        "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "h5py>=3.0.0",
    "readerwriterlock>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
    "pyright>=1.1.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/benediktbrandes/united-system"
Documentation = "https://united-system.readthedocs.io/"
Repository = "https://github.com/benediktbrandes/united-system.git"
"Bug Tracker" = "https://github.com/benediktbrandes/united-system/issues"
"Source Code" = "https://github.com/benediktbrandes/united-system"

[project.scripts]
united-system = "united_system.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["united_system*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
"united_system" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["united_system"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "h5py.*",
    "readerwriterlock.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["united_system"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
